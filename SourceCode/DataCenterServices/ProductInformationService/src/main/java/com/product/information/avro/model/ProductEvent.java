/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.product.information.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ProductEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -988604226214420326L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProductEvent\",\"namespace\":\"com.product.information.avro.model\",\"fields\":[{\"name\":\"eventType\",\"type\":[\"null\",\"string\"]},{\"name\":\"message\",\"type\":[\"null\",\"string\"]},{\"name\":\"product\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Product\",\"fields\":[{\"name\":\"productId\",\"type\":{\"type\":\"long\",\"java-class\":\"java.lang.Long\"}},{\"name\":\"productName\",\"type\":[\"null\",\"string\"]},{\"name\":\"description\",\"type\":[\"null\",\"string\"]},{\"name\":\"brand\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Brand\",\"fields\":[{\"name\":\"brandId\",\"type\":{\"type\":\"long\",\"java-class\":\"java.lang.Long\"}},{\"name\":\"brandName\",\"type\":[\"null\",\"string\"]},{\"name\":\"imageUrl\",\"type\":[\"null\",\"string\"]}]}]},{\"name\":\"material\",\"type\":[\"null\",\"string\"]},{\"name\":\"size\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Size\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"long\",\"java-class\":\"java.lang.Long\"}},{\"name\":\"sizeUS\",\"type\":[\"null\",\"string\"]},{\"name\":\"sizeEU\",\"type\":[\"null\",\"string\"]}]}]},{\"name\":\"colour\",\"type\":[\"null\",\"string\"]},{\"name\":\"ageGroup\",\"type\":[\"null\",\"string\"]},{\"name\":\"category\",\"type\":[\"null\",\"string\"]},{\"name\":\"imageUrl\",\"type\":[\"null\",\"string\"]},{\"name\":\"price\",\"type\":{\"type\":\"float\",\"java-class\":\"java.lang.Float\"}},{\"name\":\"country\",\"type\":[\"null\",\"string\"]},{\"name\":\"quantity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Quantity\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"long\",\"java-class\":\"java.lang.Long\"}},{\"name\":\"quantityTotal\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Integer\"}},{\"name\":\"quantityAvailable\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Integer\"}}]}]}]}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ProductEvent> ENCODER =
      new BinaryMessageEncoder<ProductEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProductEvent> DECODER =
      new BinaryMessageDecoder<ProductEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ProductEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ProductEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ProductEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ProductEvent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ProductEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ProductEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ProductEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ProductEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence eventType;
  @Deprecated public java.lang.CharSequence message;
  @Deprecated public com.product.information.avro.model.Product product;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProductEvent() {}

  /**
   * All-args constructor.
   * @param eventType The new value for eventType
   * @param message The new value for message
   * @param product The new value for product
   */
  public ProductEvent(java.lang.CharSequence eventType, java.lang.CharSequence message, com.product.information.avro.model.Product product) {
    this.eventType = eventType;
    this.message = message;
    this.product = product;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventType;
    case 1: return message;
    case 2: return product;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventType = (java.lang.CharSequence)value$; break;
    case 1: message = (java.lang.CharSequence)value$; break;
    case 2: product = (com.product.information.avro.model.Product)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.CharSequence getEventType() {
    return eventType;
  }


  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.CharSequence value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return The value of the 'message' field.
   */
  public java.lang.CharSequence getMessage() {
    return message;
  }


  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.CharSequence value) {
    this.message = value;
  }

  /**
   * Gets the value of the 'product' field.
   * @return The value of the 'product' field.
   */
  public com.product.information.avro.model.Product getProduct() {
    return product;
  }


  /**
   * Sets the value of the 'product' field.
   * @param value the value to set.
   */
  public void setProduct(com.product.information.avro.model.Product value) {
    this.product = value;
  }

  /**
   * Creates a new ProductEvent RecordBuilder.
   * @return A new ProductEvent RecordBuilder
   */
  public static com.product.information.avro.model.ProductEvent.Builder newBuilder() {
    return new com.product.information.avro.model.ProductEvent.Builder();
  }

  /**
   * Creates a new ProductEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProductEvent RecordBuilder
   */
  public static com.product.information.avro.model.ProductEvent.Builder newBuilder(com.product.information.avro.model.ProductEvent.Builder other) {
    if (other == null) {
      return new com.product.information.avro.model.ProductEvent.Builder();
    } else {
      return new com.product.information.avro.model.ProductEvent.Builder(other);
    }
  }

  /**
   * Creates a new ProductEvent RecordBuilder by copying an existing ProductEvent instance.
   * @param other The existing instance to copy.
   * @return A new ProductEvent RecordBuilder
   */
  public static com.product.information.avro.model.ProductEvent.Builder newBuilder(com.product.information.avro.model.ProductEvent other) {
    if (other == null) {
      return new com.product.information.avro.model.ProductEvent.Builder();
    } else {
      return new com.product.information.avro.model.ProductEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for ProductEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProductEvent>
    implements org.apache.avro.data.RecordBuilder<ProductEvent> {

    private java.lang.CharSequence eventType;
    private java.lang.CharSequence message;
    private com.product.information.avro.model.Product product;
    private com.product.information.avro.model.Product.Builder productBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.product.information.avro.model.ProductEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventType)) {
        this.eventType = data().deepCopy(fields()[0].schema(), other.eventType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.message)) {
        this.message = data().deepCopy(fields()[1].schema(), other.message);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.product)) {
        this.product = data().deepCopy(fields()[2].schema(), other.product);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasProductBuilder()) {
        this.productBuilder = com.product.information.avro.model.Product.newBuilder(other.getProductBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing ProductEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.product.information.avro.model.ProductEvent other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.eventType)) {
        this.eventType = data().deepCopy(fields()[0].schema(), other.eventType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.message)) {
        this.message = data().deepCopy(fields()[1].schema(), other.message);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.product)) {
        this.product = data().deepCopy(fields()[2].schema(), other.product);
        fieldSetFlags()[2] = true;
      }
      this.productBuilder = null;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventType() {
      return eventType;
    }


    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public com.product.information.avro.model.ProductEvent.Builder setEventType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.eventType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public com.product.information.avro.model.ProductEvent.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * @return The value.
      */
    public java.lang.CharSequence getMessage() {
      return message;
    }


    /**
      * Sets the value of the 'message' field.
      * @param value The value of 'message'.
      * @return This builder.
      */
    public com.product.information.avro.model.ProductEvent.Builder setMessage(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.message = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'message' field.
      * @return This builder.
      */
    public com.product.information.avro.model.ProductEvent.Builder clearMessage() {
      message = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'product' field.
      * @return The value.
      */
    public com.product.information.avro.model.Product getProduct() {
      return product;
    }


    /**
      * Sets the value of the 'product' field.
      * @param value The value of 'product'.
      * @return This builder.
      */
    public com.product.information.avro.model.ProductEvent.Builder setProduct(com.product.information.avro.model.Product value) {
      validate(fields()[2], value);
      this.productBuilder = null;
      this.product = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'product' field has been set.
      * @return True if the 'product' field has been set, false otherwise.
      */
    public boolean hasProduct() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'product' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.product.information.avro.model.Product.Builder getProductBuilder() {
      if (productBuilder == null) {
        if (hasProduct()) {
          setProductBuilder(com.product.information.avro.model.Product.newBuilder(product));
        } else {
          setProductBuilder(com.product.information.avro.model.Product.newBuilder());
        }
      }
      return productBuilder;
    }

    /**
     * Sets the Builder instance for the 'product' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.product.information.avro.model.ProductEvent.Builder setProductBuilder(com.product.information.avro.model.Product.Builder value) {
      clearProduct();
      productBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'product' field has an active Builder instance
     * @return True if the 'product' field has an active Builder instance
     */
    public boolean hasProductBuilder() {
      return productBuilder != null;
    }

    /**
      * Clears the value of the 'product' field.
      * @return This builder.
      */
    public com.product.information.avro.model.ProductEvent.Builder clearProduct() {
      product = null;
      productBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProductEvent build() {
      try {
        ProductEvent record = new ProductEvent();
        record.eventType = fieldSetFlags()[0] ? this.eventType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.message = fieldSetFlags()[1] ? this.message : (java.lang.CharSequence) defaultValue(fields()[1]);
        if (productBuilder != null) {
          try {
            record.product = this.productBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("product"));
            throw e;
          }
        } else {
          record.product = fieldSetFlags()[2] ? this.product : (com.product.information.avro.model.Product) defaultValue(fields()[2]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProductEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProductEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProductEvent>
    READER$ = (org.apache.avro.io.DatumReader<ProductEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.eventType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.eventType);
    }

    if (this.message == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.message);
    }

    if (this.product == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.product.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.eventType = null;
      } else {
        this.eventType = in.readString(this.eventType instanceof Utf8 ? (Utf8)this.eventType : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.message = null;
      } else {
        this.message = in.readString(this.message instanceof Utf8 ? (Utf8)this.message : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.product = null;
      } else {
        if (this.product == null) {
          this.product = new com.product.information.avro.model.Product();
        }
        this.product.customDecode(in);
      }

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.eventType = null;
          } else {
            this.eventType = in.readString(this.eventType instanceof Utf8 ? (Utf8)this.eventType : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.message = null;
          } else {
            this.message = in.readString(this.message instanceof Utf8 ? (Utf8)this.message : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.product = null;
          } else {
            if (this.product == null) {
              this.product = new com.product.information.avro.model.Product();
            }
            this.product.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










