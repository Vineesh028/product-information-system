/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.product.information.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Product extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7468043217669327217L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Product\",\"namespace\":\"com.product.information.avro.model\",\"fields\":[{\"name\":\"productId\",\"type\":{\"type\":\"long\",\"java-class\":\"java.lang.Long\"}},{\"name\":\"productName\",\"type\":[\"null\",\"string\"]},{\"name\":\"description\",\"type\":[\"null\",\"string\"]},{\"name\":\"brand\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Brand\",\"fields\":[{\"name\":\"brandId\",\"type\":{\"type\":\"long\",\"java-class\":\"java.lang.Long\"}},{\"name\":\"brandName\",\"type\":[\"null\",\"string\"]},{\"name\":\"imageUrl\",\"type\":[\"null\",\"string\"]}]}]},{\"name\":\"material\",\"type\":[\"null\",\"string\"]},{\"name\":\"size\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Size\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"long\",\"java-class\":\"java.lang.Long\"}},{\"name\":\"sizeUS\",\"type\":[\"null\",\"string\"]},{\"name\":\"sizeEU\",\"type\":[\"null\",\"string\"]}]}]},{\"name\":\"colour\",\"type\":[\"null\",\"string\"]},{\"name\":\"ageGroup\",\"type\":[\"null\",\"string\"]},{\"name\":\"category\",\"type\":[\"null\",\"string\"]},{\"name\":\"imageUrl\",\"type\":[\"null\",\"string\"]},{\"name\":\"price\",\"type\":{\"type\":\"float\",\"java-class\":\"java.lang.Float\"}},{\"name\":\"country\",\"type\":[\"null\",\"string\"]},{\"name\":\"quantity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Quantity\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"long\",\"java-class\":\"java.lang.Long\"}},{\"name\":\"quantityTotal\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Integer\"}},{\"name\":\"quantityAvailable\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Integer\"}}]}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Product> ENCODER =
      new BinaryMessageEncoder<Product>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Product> DECODER =
      new BinaryMessageDecoder<Product>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Product> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Product> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Product> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Product>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Product to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Product from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Product instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Product fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long productId;
  @Deprecated public java.lang.CharSequence productName;
  @Deprecated public java.lang.CharSequence description;
  @Deprecated public com.product.information.avro.model.Brand brand;
  @Deprecated public java.lang.CharSequence material;
  @Deprecated public com.product.information.avro.model.Size size;
  @Deprecated public java.lang.CharSequence colour;
  @Deprecated public java.lang.CharSequence ageGroup;
  @Deprecated public java.lang.CharSequence category;
  @Deprecated public java.lang.CharSequence imageUrl;
  @Deprecated public float price;
  @Deprecated public java.lang.CharSequence country;
  @Deprecated public com.product.information.avro.model.Quantity quantity;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Product() {}

  /**
   * All-args constructor.
   * @param productId The new value for productId
   * @param productName The new value for productName
   * @param description The new value for description
   * @param brand The new value for brand
   * @param material The new value for material
   * @param size The new value for size
   * @param colour The new value for colour
   * @param ageGroup The new value for ageGroup
   * @param category The new value for category
   * @param imageUrl The new value for imageUrl
   * @param price The new value for price
   * @param country The new value for country
   * @param quantity The new value for quantity
   */
  public Product(java.lang.Long productId, java.lang.CharSequence productName, java.lang.CharSequence description, com.product.information.avro.model.Brand brand, java.lang.CharSequence material, com.product.information.avro.model.Size size, java.lang.CharSequence colour, java.lang.CharSequence ageGroup, java.lang.CharSequence category, java.lang.CharSequence imageUrl, java.lang.Float price, java.lang.CharSequence country, com.product.information.avro.model.Quantity quantity) {
    this.productId = productId;
    this.productName = productName;
    this.description = description;
    this.brand = brand;
    this.material = material;
    this.size = size;
    this.colour = colour;
    this.ageGroup = ageGroup;
    this.category = category;
    this.imageUrl = imageUrl;
    this.price = price;
    this.country = country;
    this.quantity = quantity;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return productId;
    case 1: return productName;
    case 2: return description;
    case 3: return brand;
    case 4: return material;
    case 5: return size;
    case 6: return colour;
    case 7: return ageGroup;
    case 8: return category;
    case 9: return imageUrl;
    case 10: return price;
    case 11: return country;
    case 12: return quantity;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: productId = (java.lang.Long)value$; break;
    case 1: productName = (java.lang.CharSequence)value$; break;
    case 2: description = (java.lang.CharSequence)value$; break;
    case 3: brand = (com.product.information.avro.model.Brand)value$; break;
    case 4: material = (java.lang.CharSequence)value$; break;
    case 5: size = (com.product.information.avro.model.Size)value$; break;
    case 6: colour = (java.lang.CharSequence)value$; break;
    case 7: ageGroup = (java.lang.CharSequence)value$; break;
    case 8: category = (java.lang.CharSequence)value$; break;
    case 9: imageUrl = (java.lang.CharSequence)value$; break;
    case 10: price = (java.lang.Float)value$; break;
    case 11: country = (java.lang.CharSequence)value$; break;
    case 12: quantity = (com.product.information.avro.model.Quantity)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'productId' field.
   * @return The value of the 'productId' field.
   */
  public long getProductId() {
    return productId;
  }


  /**
   * Sets the value of the 'productId' field.
   * @param value the value to set.
   */
  public void setProductId(long value) {
    this.productId = value;
  }

  /**
   * Gets the value of the 'productName' field.
   * @return The value of the 'productName' field.
   */
  public java.lang.CharSequence getProductName() {
    return productName;
  }


  /**
   * Sets the value of the 'productName' field.
   * @param value the value to set.
   */
  public void setProductName(java.lang.CharSequence value) {
    this.productName = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'brand' field.
   * @return The value of the 'brand' field.
   */
  public com.product.information.avro.model.Brand getBrand() {
    return brand;
  }


  /**
   * Sets the value of the 'brand' field.
   * @param value the value to set.
   */
  public void setBrand(com.product.information.avro.model.Brand value) {
    this.brand = value;
  }

  /**
   * Gets the value of the 'material' field.
   * @return The value of the 'material' field.
   */
  public java.lang.CharSequence getMaterial() {
    return material;
  }


  /**
   * Sets the value of the 'material' field.
   * @param value the value to set.
   */
  public void setMaterial(java.lang.CharSequence value) {
    this.material = value;
  }

  /**
   * Gets the value of the 'size' field.
   * @return The value of the 'size' field.
   */
  public com.product.information.avro.model.Size getSize() {
    return size;
  }


  /**
   * Sets the value of the 'size' field.
   * @param value the value to set.
   */
  public void setSize(com.product.information.avro.model.Size value) {
    this.size = value;
  }

  /**
   * Gets the value of the 'colour' field.
   * @return The value of the 'colour' field.
   */
  public java.lang.CharSequence getColour() {
    return colour;
  }


  /**
   * Sets the value of the 'colour' field.
   * @param value the value to set.
   */
  public void setColour(java.lang.CharSequence value) {
    this.colour = value;
  }

  /**
   * Gets the value of the 'ageGroup' field.
   * @return The value of the 'ageGroup' field.
   */
  public java.lang.CharSequence getAgeGroup() {
    return ageGroup;
  }


  /**
   * Sets the value of the 'ageGroup' field.
   * @param value the value to set.
   */
  public void setAgeGroup(java.lang.CharSequence value) {
    this.ageGroup = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public java.lang.CharSequence getCategory() {
    return category;
  }


  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(java.lang.CharSequence value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'imageUrl' field.
   * @return The value of the 'imageUrl' field.
   */
  public java.lang.CharSequence getImageUrl() {
    return imageUrl;
  }


  /**
   * Sets the value of the 'imageUrl' field.
   * @param value the value to set.
   */
  public void setImageUrl(java.lang.CharSequence value) {
    this.imageUrl = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public float getPrice() {
    return price;
  }


  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(float value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'country' field.
   * @return The value of the 'country' field.
   */
  public java.lang.CharSequence getCountry() {
    return country;
  }


  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public com.product.information.avro.model.Quantity getQuantity() {
    return quantity;
  }


  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(com.product.information.avro.model.Quantity value) {
    this.quantity = value;
  }

  /**
   * Creates a new Product RecordBuilder.
   * @return A new Product RecordBuilder
   */
  public static com.product.information.avro.model.Product.Builder newBuilder() {
    return new com.product.information.avro.model.Product.Builder();
  }

  /**
   * Creates a new Product RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Product RecordBuilder
   */
  public static com.product.information.avro.model.Product.Builder newBuilder(com.product.information.avro.model.Product.Builder other) {
    if (other == null) {
      return new com.product.information.avro.model.Product.Builder();
    } else {
      return new com.product.information.avro.model.Product.Builder(other);
    }
  }

  /**
   * Creates a new Product RecordBuilder by copying an existing Product instance.
   * @param other The existing instance to copy.
   * @return A new Product RecordBuilder
   */
  public static com.product.information.avro.model.Product.Builder newBuilder(com.product.information.avro.model.Product other) {
    if (other == null) {
      return new com.product.information.avro.model.Product.Builder();
    } else {
      return new com.product.information.avro.model.Product.Builder(other);
    }
  }

  /**
   * RecordBuilder for Product instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Product>
    implements org.apache.avro.data.RecordBuilder<Product> {

    private long productId;
    private java.lang.CharSequence productName;
    private java.lang.CharSequence description;
    private com.product.information.avro.model.Brand brand;
    private com.product.information.avro.model.Brand.Builder brandBuilder;
    private java.lang.CharSequence material;
    private com.product.information.avro.model.Size size;
    private com.product.information.avro.model.Size.Builder sizeBuilder;
    private java.lang.CharSequence colour;
    private java.lang.CharSequence ageGroup;
    private java.lang.CharSequence category;
    private java.lang.CharSequence imageUrl;
    private float price;
    private java.lang.CharSequence country;
    private com.product.information.avro.model.Quantity quantity;
    private com.product.information.avro.model.Quantity.Builder quantityBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.product.information.avro.model.Product.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.productId)) {
        this.productId = data().deepCopy(fields()[0].schema(), other.productId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.productName)) {
        this.productName = data().deepCopy(fields()[1].schema(), other.productName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.brand)) {
        this.brand = data().deepCopy(fields()[3].schema(), other.brand);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasBrandBuilder()) {
        this.brandBuilder = com.product.information.avro.model.Brand.newBuilder(other.getBrandBuilder());
      }
      if (isValidValue(fields()[4], other.material)) {
        this.material = data().deepCopy(fields()[4].schema(), other.material);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.size)) {
        this.size = data().deepCopy(fields()[5].schema(), other.size);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasSizeBuilder()) {
        this.sizeBuilder = com.product.information.avro.model.Size.newBuilder(other.getSizeBuilder());
      }
      if (isValidValue(fields()[6], other.colour)) {
        this.colour = data().deepCopy(fields()[6].schema(), other.colour);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.ageGroup)) {
        this.ageGroup = data().deepCopy(fields()[7].schema(), other.ageGroup);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.category)) {
        this.category = data().deepCopy(fields()[8].schema(), other.category);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.imageUrl)) {
        this.imageUrl = data().deepCopy(fields()[9].schema(), other.imageUrl);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.price)) {
        this.price = data().deepCopy(fields()[10].schema(), other.price);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.country)) {
        this.country = data().deepCopy(fields()[11].schema(), other.country);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.quantity)) {
        this.quantity = data().deepCopy(fields()[12].schema(), other.quantity);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasQuantityBuilder()) {
        this.quantityBuilder = com.product.information.avro.model.Quantity.newBuilder(other.getQuantityBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Product instance
     * @param other The existing instance to copy.
     */
    private Builder(com.product.information.avro.model.Product other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.productId)) {
        this.productId = data().deepCopy(fields()[0].schema(), other.productId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productName)) {
        this.productName = data().deepCopy(fields()[1].schema(), other.productName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.brand)) {
        this.brand = data().deepCopy(fields()[3].schema(), other.brand);
        fieldSetFlags()[3] = true;
      }
      this.brandBuilder = null;
      if (isValidValue(fields()[4], other.material)) {
        this.material = data().deepCopy(fields()[4].schema(), other.material);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.size)) {
        this.size = data().deepCopy(fields()[5].schema(), other.size);
        fieldSetFlags()[5] = true;
      }
      this.sizeBuilder = null;
      if (isValidValue(fields()[6], other.colour)) {
        this.colour = data().deepCopy(fields()[6].schema(), other.colour);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ageGroup)) {
        this.ageGroup = data().deepCopy(fields()[7].schema(), other.ageGroup);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.category)) {
        this.category = data().deepCopy(fields()[8].schema(), other.category);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.imageUrl)) {
        this.imageUrl = data().deepCopy(fields()[9].schema(), other.imageUrl);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.price)) {
        this.price = data().deepCopy(fields()[10].schema(), other.price);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.country)) {
        this.country = data().deepCopy(fields()[11].schema(), other.country);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.quantity)) {
        this.quantity = data().deepCopy(fields()[12].schema(), other.quantity);
        fieldSetFlags()[12] = true;
      }
      this.quantityBuilder = null;
    }

    /**
      * Gets the value of the 'productId' field.
      * @return The value.
      */
    public long getProductId() {
      return productId;
    }


    /**
      * Sets the value of the 'productId' field.
      * @param value The value of 'productId'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setProductId(long value) {
      validate(fields()[0], value);
      this.productId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'productId' field has been set.
      * @return True if the 'productId' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'productId' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearProductId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'productName' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductName() {
      return productName;
    }


    /**
      * Sets the value of the 'productName' field.
      * @param value The value of 'productName'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setProductName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.productName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'productName' field has been set.
      * @return True if the 'productName' field has been set, false otherwise.
      */
    public boolean hasProductName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'productName' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearProductName() {
      productName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'brand' field.
      * @return The value.
      */
    public com.product.information.avro.model.Brand getBrand() {
      return brand;
    }


    /**
      * Sets the value of the 'brand' field.
      * @param value The value of 'brand'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setBrand(com.product.information.avro.model.Brand value) {
      validate(fields()[3], value);
      this.brandBuilder = null;
      this.brand = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'brand' field has been set.
      * @return True if the 'brand' field has been set, false otherwise.
      */
    public boolean hasBrand() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'brand' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.product.information.avro.model.Brand.Builder getBrandBuilder() {
      if (brandBuilder == null) {
        if (hasBrand()) {
          setBrandBuilder(com.product.information.avro.model.Brand.newBuilder(brand));
        } else {
          setBrandBuilder(com.product.information.avro.model.Brand.newBuilder());
        }
      }
      return brandBuilder;
    }

    /**
     * Sets the Builder instance for the 'brand' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.product.information.avro.model.Product.Builder setBrandBuilder(com.product.information.avro.model.Brand.Builder value) {
      clearBrand();
      brandBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'brand' field has an active Builder instance
     * @return True if the 'brand' field has an active Builder instance
     */
    public boolean hasBrandBuilder() {
      return brandBuilder != null;
    }

    /**
      * Clears the value of the 'brand' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearBrand() {
      brand = null;
      brandBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'material' field.
      * @return The value.
      */
    public java.lang.CharSequence getMaterial() {
      return material;
    }


    /**
      * Sets the value of the 'material' field.
      * @param value The value of 'material'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setMaterial(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.material = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'material' field has been set.
      * @return True if the 'material' field has been set, false otherwise.
      */
    public boolean hasMaterial() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'material' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearMaterial() {
      material = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'size' field.
      * @return The value.
      */
    public com.product.information.avro.model.Size getSize() {
      return size;
    }


    /**
      * Sets the value of the 'size' field.
      * @param value The value of 'size'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setSize(com.product.information.avro.model.Size value) {
      validate(fields()[5], value);
      this.sizeBuilder = null;
      this.size = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'size' field has been set.
      * @return True if the 'size' field has been set, false otherwise.
      */
    public boolean hasSize() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'size' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.product.information.avro.model.Size.Builder getSizeBuilder() {
      if (sizeBuilder == null) {
        if (hasSize()) {
          setSizeBuilder(com.product.information.avro.model.Size.newBuilder(size));
        } else {
          setSizeBuilder(com.product.information.avro.model.Size.newBuilder());
        }
      }
      return sizeBuilder;
    }

    /**
     * Sets the Builder instance for the 'size' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.product.information.avro.model.Product.Builder setSizeBuilder(com.product.information.avro.model.Size.Builder value) {
      clearSize();
      sizeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'size' field has an active Builder instance
     * @return True if the 'size' field has an active Builder instance
     */
    public boolean hasSizeBuilder() {
      return sizeBuilder != null;
    }

    /**
      * Clears the value of the 'size' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearSize() {
      size = null;
      sizeBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'colour' field.
      * @return The value.
      */
    public java.lang.CharSequence getColour() {
      return colour;
    }


    /**
      * Sets the value of the 'colour' field.
      * @param value The value of 'colour'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setColour(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.colour = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'colour' field has been set.
      * @return True if the 'colour' field has been set, false otherwise.
      */
    public boolean hasColour() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'colour' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearColour() {
      colour = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'ageGroup' field.
      * @return The value.
      */
    public java.lang.CharSequence getAgeGroup() {
      return ageGroup;
    }


    /**
      * Sets the value of the 'ageGroup' field.
      * @param value The value of 'ageGroup'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setAgeGroup(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.ageGroup = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'ageGroup' field has been set.
      * @return True if the 'ageGroup' field has been set, false otherwise.
      */
    public boolean hasAgeGroup() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'ageGroup' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearAgeGroup() {
      ageGroup = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public java.lang.CharSequence getCategory() {
      return category;
    }


    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setCategory(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.category = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearCategory() {
      category = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'imageUrl' field.
      * @return The value.
      */
    public java.lang.CharSequence getImageUrl() {
      return imageUrl;
    }


    /**
      * Sets the value of the 'imageUrl' field.
      * @param value The value of 'imageUrl'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setImageUrl(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.imageUrl = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'imageUrl' field has been set.
      * @return True if the 'imageUrl' field has been set, false otherwise.
      */
    public boolean hasImageUrl() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'imageUrl' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearImageUrl() {
      imageUrl = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public float getPrice() {
      return price;
    }


    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setPrice(float value) {
      validate(fields()[10], value);
      this.price = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearPrice() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'country' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountry() {
      return country;
    }


    /**
      * Sets the value of the 'country' field.
      * @param value The value of 'country'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.country = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'country' field has been set.
      * @return True if the 'country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'country' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearCountry() {
      country = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public com.product.information.avro.model.Quantity getQuantity() {
      return quantity;
    }


    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder setQuantity(com.product.information.avro.model.Quantity value) {
      validate(fields()[12], value);
      this.quantityBuilder = null;
      this.quantity = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'quantity' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.product.information.avro.model.Quantity.Builder getQuantityBuilder() {
      if (quantityBuilder == null) {
        if (hasQuantity()) {
          setQuantityBuilder(com.product.information.avro.model.Quantity.newBuilder(quantity));
        } else {
          setQuantityBuilder(com.product.information.avro.model.Quantity.newBuilder());
        }
      }
      return quantityBuilder;
    }

    /**
     * Sets the Builder instance for the 'quantity' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.product.information.avro.model.Product.Builder setQuantityBuilder(com.product.information.avro.model.Quantity.Builder value) {
      clearQuantity();
      quantityBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'quantity' field has an active Builder instance
     * @return True if the 'quantity' field has an active Builder instance
     */
    public boolean hasQuantityBuilder() {
      return quantityBuilder != null;
    }

    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public com.product.information.avro.model.Product.Builder clearQuantity() {
      quantity = null;
      quantityBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Product build() {
      try {
        Product record = new Product();
        record.productId = fieldSetFlags()[0] ? this.productId : (java.lang.Long) defaultValue(fields()[0]);
        record.productName = fieldSetFlags()[1] ? this.productName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.CharSequence) defaultValue(fields()[2]);
        if (brandBuilder != null) {
          try {
            record.brand = this.brandBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("brand"));
            throw e;
          }
        } else {
          record.brand = fieldSetFlags()[3] ? this.brand : (com.product.information.avro.model.Brand) defaultValue(fields()[3]);
        }
        record.material = fieldSetFlags()[4] ? this.material : (java.lang.CharSequence) defaultValue(fields()[4]);
        if (sizeBuilder != null) {
          try {
            record.size = this.sizeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("size"));
            throw e;
          }
        } else {
          record.size = fieldSetFlags()[5] ? this.size : (com.product.information.avro.model.Size) defaultValue(fields()[5]);
        }
        record.colour = fieldSetFlags()[6] ? this.colour : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.ageGroup = fieldSetFlags()[7] ? this.ageGroup : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.category = fieldSetFlags()[8] ? this.category : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.imageUrl = fieldSetFlags()[9] ? this.imageUrl : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.price = fieldSetFlags()[10] ? this.price : (java.lang.Float) defaultValue(fields()[10]);
        record.country = fieldSetFlags()[11] ? this.country : (java.lang.CharSequence) defaultValue(fields()[11]);
        if (quantityBuilder != null) {
          try {
            record.quantity = this.quantityBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("quantity"));
            throw e;
          }
        } else {
          record.quantity = fieldSetFlags()[12] ? this.quantity : (com.product.information.avro.model.Quantity) defaultValue(fields()[12]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Product>
    WRITER$ = (org.apache.avro.io.DatumWriter<Product>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Product>
    READER$ = (org.apache.avro.io.DatumReader<Product>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.productId);

    if (this.productName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.productName);
    }

    if (this.description == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.description);
    }

    if (this.brand == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.brand.customEncode(out);
    }

    if (this.material == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.material);
    }

    if (this.size == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.size.customEncode(out);
    }

    if (this.colour == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.colour);
    }

    if (this.ageGroup == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ageGroup);
    }

    if (this.category == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.category);
    }

    if (this.imageUrl == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.imageUrl);
    }

    out.writeFloat(this.price);

    if (this.country == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.country);
    }

    if (this.quantity == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.quantity.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.productId = in.readLong();

      if (in.readIndex() != 1) {
        in.readNull();
        this.productName = null;
      } else {
        this.productName = in.readString(this.productName instanceof Utf8 ? (Utf8)this.productName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.description = null;
      } else {
        this.description = in.readString(this.description instanceof Utf8 ? (Utf8)this.description : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.brand = null;
      } else {
        if (this.brand == null) {
          this.brand = new com.product.information.avro.model.Brand();
        }
        this.brand.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.material = null;
      } else {
        this.material = in.readString(this.material instanceof Utf8 ? (Utf8)this.material : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.size = null;
      } else {
        if (this.size == null) {
          this.size = new com.product.information.avro.model.Size();
        }
        this.size.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.colour = null;
      } else {
        this.colour = in.readString(this.colour instanceof Utf8 ? (Utf8)this.colour : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ageGroup = null;
      } else {
        this.ageGroup = in.readString(this.ageGroup instanceof Utf8 ? (Utf8)this.ageGroup : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.category = null;
      } else {
        this.category = in.readString(this.category instanceof Utf8 ? (Utf8)this.category : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.imageUrl = null;
      } else {
        this.imageUrl = in.readString(this.imageUrl instanceof Utf8 ? (Utf8)this.imageUrl : null);
      }

      this.price = in.readFloat();

      if (in.readIndex() != 1) {
        in.readNull();
        this.country = null;
      } else {
        this.country = in.readString(this.country instanceof Utf8 ? (Utf8)this.country : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.quantity = null;
      } else {
        if (this.quantity == null) {
          this.quantity = new com.product.information.avro.model.Quantity();
        }
        this.quantity.customDecode(in);
      }

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.productId = in.readLong();
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.productName = null;
          } else {
            this.productName = in.readString(this.productName instanceof Utf8 ? (Utf8)this.productName : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.description = null;
          } else {
            this.description = in.readString(this.description instanceof Utf8 ? (Utf8)this.description : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.brand = null;
          } else {
            if (this.brand == null) {
              this.brand = new com.product.information.avro.model.Brand();
            }
            this.brand.customDecode(in);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.material = null;
          } else {
            this.material = in.readString(this.material instanceof Utf8 ? (Utf8)this.material : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.size = null;
          } else {
            if (this.size == null) {
              this.size = new com.product.information.avro.model.Size();
            }
            this.size.customDecode(in);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.colour = null;
          } else {
            this.colour = in.readString(this.colour instanceof Utf8 ? (Utf8)this.colour : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ageGroup = null;
          } else {
            this.ageGroup = in.readString(this.ageGroup instanceof Utf8 ? (Utf8)this.ageGroup : null);
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.category = null;
          } else {
            this.category = in.readString(this.category instanceof Utf8 ? (Utf8)this.category : null);
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.imageUrl = null;
          } else {
            this.imageUrl = in.readString(this.imageUrl instanceof Utf8 ? (Utf8)this.imageUrl : null);
          }
          break;

        case 10:
          this.price = in.readFloat();
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.country = null;
          } else {
            this.country = in.readString(this.country instanceof Utf8 ? (Utf8)this.country : null);
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.quantity = null;
          } else {
            if (this.quantity == null) {
              this.quantity = new com.product.information.avro.model.Quantity();
            }
            this.quantity.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










