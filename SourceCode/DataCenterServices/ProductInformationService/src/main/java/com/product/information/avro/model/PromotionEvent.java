/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.product.information.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PromotionEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5566259568248255208L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PromotionEvent\",\"namespace\":\"com.product.information.avro.model\",\"fields\":[{\"name\":\"eventType\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"promotion\",\"type\":{\"type\":\"record\",\"name\":\"Promotion\",\"fields\":[{\"name\":\"promotionId\",\"type\":\"long\"},{\"name\":\"productList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Product\",\"fields\":[{\"name\":\"productId\",\"type\":\"long\"},{\"name\":\"productName\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"brand\",\"type\":{\"type\":\"record\",\"name\":\"Brand\",\"fields\":[{\"name\":\"brandId\",\"type\":\"long\"},{\"name\":\"brandName\",\"type\":\"string\"},{\"name\":\"imageUrl\",\"type\":\"string\"}]}},{\"name\":\"material\",\"type\":\"string\"},{\"name\":\"size\",\"type\":{\"type\":\"record\",\"name\":\"Size\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"sizeUS\",\"type\":\"string\"},{\"name\":\"sizeEU\",\"type\":\"string\"}]}},{\"name\":\"colour\",\"type\":\"string\"},{\"name\":\"ageGroup\",\"type\":\"string\"},{\"name\":\"category\",\"type\":\"string\"},{\"name\":\"imageUrl\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"float\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"quantity\",\"type\":{\"type\":\"record\",\"name\":\"Quantity\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"quantityTotal\",\"type\":\"int\"},{\"name\":\"quantityAvailable\",\"type\":\"int\"}]}}]}}},{\"name\":\"targetGroup\",\"type\":\"string\"},{\"name\":\"promotionMessage\",\"type\":\"string\"},{\"name\":\"imageUrls\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PromotionEvent> ENCODER =
      new BinaryMessageEncoder<PromotionEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PromotionEvent> DECODER =
      new BinaryMessageDecoder<PromotionEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PromotionEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PromotionEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PromotionEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PromotionEvent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PromotionEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PromotionEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PromotionEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PromotionEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence eventType;
  @Deprecated public java.lang.CharSequence message;
  @Deprecated public com.product.information.avro.model.Promotion promotion;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PromotionEvent() {}

  /**
   * All-args constructor.
   * @param eventType The new value for eventType
   * @param message The new value for message
   * @param promotion The new value for promotion
   */
  public PromotionEvent(java.lang.CharSequence eventType, java.lang.CharSequence message, com.product.information.avro.model.Promotion promotion) {
    this.eventType = eventType;
    this.message = message;
    this.promotion = promotion;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventType;
    case 1: return message;
    case 2: return promotion;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventType = (java.lang.CharSequence)value$; break;
    case 1: message = (java.lang.CharSequence)value$; break;
    case 2: promotion = (com.product.information.avro.model.Promotion)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.CharSequence getEventType() {
    return eventType;
  }


  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.CharSequence value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return The value of the 'message' field.
   */
  public java.lang.CharSequence getMessage() {
    return message;
  }


  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.CharSequence value) {
    this.message = value;
  }

  /**
   * Gets the value of the 'promotion' field.
   * @return The value of the 'promotion' field.
   */
  public com.product.information.avro.model.Promotion getPromotion() {
    return promotion;
  }


  /**
   * Sets the value of the 'promotion' field.
   * @param value the value to set.
   */
  public void setPromotion(com.product.information.avro.model.Promotion value) {
    this.promotion = value;
  }

  /**
   * Creates a new PromotionEvent RecordBuilder.
   * @return A new PromotionEvent RecordBuilder
   */
  public static com.product.information.avro.model.PromotionEvent.Builder newBuilder() {
    return new com.product.information.avro.model.PromotionEvent.Builder();
  }

  /**
   * Creates a new PromotionEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PromotionEvent RecordBuilder
   */
  public static com.product.information.avro.model.PromotionEvent.Builder newBuilder(com.product.information.avro.model.PromotionEvent.Builder other) {
    if (other == null) {
      return new com.product.information.avro.model.PromotionEvent.Builder();
    } else {
      return new com.product.information.avro.model.PromotionEvent.Builder(other);
    }
  }

  /**
   * Creates a new PromotionEvent RecordBuilder by copying an existing PromotionEvent instance.
   * @param other The existing instance to copy.
   * @return A new PromotionEvent RecordBuilder
   */
  public static com.product.information.avro.model.PromotionEvent.Builder newBuilder(com.product.information.avro.model.PromotionEvent other) {
    if (other == null) {
      return new com.product.information.avro.model.PromotionEvent.Builder();
    } else {
      return new com.product.information.avro.model.PromotionEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for PromotionEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PromotionEvent>
    implements org.apache.avro.data.RecordBuilder<PromotionEvent> {

    private java.lang.CharSequence eventType;
    private java.lang.CharSequence message;
    private com.product.information.avro.model.Promotion promotion;
    private com.product.information.avro.model.Promotion.Builder promotionBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.product.information.avro.model.PromotionEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventType)) {
        this.eventType = data().deepCopy(fields()[0].schema(), other.eventType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.message)) {
        this.message = data().deepCopy(fields()[1].schema(), other.message);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.promotion)) {
        this.promotion = data().deepCopy(fields()[2].schema(), other.promotion);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasPromotionBuilder()) {
        this.promotionBuilder = com.product.information.avro.model.Promotion.newBuilder(other.getPromotionBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing PromotionEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.product.information.avro.model.PromotionEvent other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.eventType)) {
        this.eventType = data().deepCopy(fields()[0].schema(), other.eventType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.message)) {
        this.message = data().deepCopy(fields()[1].schema(), other.message);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.promotion)) {
        this.promotion = data().deepCopy(fields()[2].schema(), other.promotion);
        fieldSetFlags()[2] = true;
      }
      this.promotionBuilder = null;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventType() {
      return eventType;
    }


    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public com.product.information.avro.model.PromotionEvent.Builder setEventType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.eventType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public com.product.information.avro.model.PromotionEvent.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * @return The value.
      */
    public java.lang.CharSequence getMessage() {
      return message;
    }


    /**
      * Sets the value of the 'message' field.
      * @param value The value of 'message'.
      * @return This builder.
      */
    public com.product.information.avro.model.PromotionEvent.Builder setMessage(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.message = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'message' field.
      * @return This builder.
      */
    public com.product.information.avro.model.PromotionEvent.Builder clearMessage() {
      message = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'promotion' field.
      * @return The value.
      */
    public com.product.information.avro.model.Promotion getPromotion() {
      return promotion;
    }


    /**
      * Sets the value of the 'promotion' field.
      * @param value The value of 'promotion'.
      * @return This builder.
      */
    public com.product.information.avro.model.PromotionEvent.Builder setPromotion(com.product.information.avro.model.Promotion value) {
      validate(fields()[2], value);
      this.promotionBuilder = null;
      this.promotion = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'promotion' field has been set.
      * @return True if the 'promotion' field has been set, false otherwise.
      */
    public boolean hasPromotion() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'promotion' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.product.information.avro.model.Promotion.Builder getPromotionBuilder() {
      if (promotionBuilder == null) {
        if (hasPromotion()) {
          setPromotionBuilder(com.product.information.avro.model.Promotion.newBuilder(promotion));
        } else {
          setPromotionBuilder(com.product.information.avro.model.Promotion.newBuilder());
        }
      }
      return promotionBuilder;
    }

    /**
     * Sets the Builder instance for the 'promotion' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.product.information.avro.model.PromotionEvent.Builder setPromotionBuilder(com.product.information.avro.model.Promotion.Builder value) {
      clearPromotion();
      promotionBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'promotion' field has an active Builder instance
     * @return True if the 'promotion' field has an active Builder instance
     */
    public boolean hasPromotionBuilder() {
      return promotionBuilder != null;
    }

    /**
      * Clears the value of the 'promotion' field.
      * @return This builder.
      */
    public com.product.information.avro.model.PromotionEvent.Builder clearPromotion() {
      promotion = null;
      promotionBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PromotionEvent build() {
      try {
        PromotionEvent record = new PromotionEvent();
        record.eventType = fieldSetFlags()[0] ? this.eventType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.message = fieldSetFlags()[1] ? this.message : (java.lang.CharSequence) defaultValue(fields()[1]);
        if (promotionBuilder != null) {
          try {
            record.promotion = this.promotionBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("promotion"));
            throw e;
          }
        } else {
          record.promotion = fieldSetFlags()[2] ? this.promotion : (com.product.information.avro.model.Promotion) defaultValue(fields()[2]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PromotionEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<PromotionEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PromotionEvent>
    READER$ = (org.apache.avro.io.DatumReader<PromotionEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.eventType);

    out.writeString(this.message);

    this.promotion.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.eventType = in.readString(this.eventType instanceof Utf8 ? (Utf8)this.eventType : null);

      this.message = in.readString(this.message instanceof Utf8 ? (Utf8)this.message : null);

      if (this.promotion == null) {
        this.promotion = new com.product.information.avro.model.Promotion();
      }
      this.promotion.customDecode(in);

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.eventType = in.readString(this.eventType instanceof Utf8 ? (Utf8)this.eventType : null);
          break;

        case 1:
          this.message = in.readString(this.message instanceof Utf8 ? (Utf8)this.message : null);
          break;

        case 2:
          if (this.promotion == null) {
            this.promotion = new com.product.information.avro.model.Promotion();
          }
          this.promotion.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










